@	CG Library
@	Coded by: Gizmo AKA Ourea, Alzie
@	Email: ccubed.techno@gmail.com
@	Date Last Touched: 3/16/2014
@----------------------------------------------------------------------------
@	Purpose: The Library Object stores all the important information
@	as far as a list of merits, attributes, skills, etc
@----------------------------------------------------------------------------
@	Object Overview
@	1. Library Object - Master Object
@	2. Library Controller - Functions for adding, deleting and editing data

th Library Object

@create CG Library
@desc CG Library=General Purpose CG Library. Do not delete me.
@create CG Description DB
@desc CG Description DB=CG Description Library. Holds description text for all stats. I can be safely deleted.%RCoded by Gizmo AKA Oureadalf AKA Ourea AKA Alzie
th [set(CG Library,va:[num(CG Description DB)])]
th [set(CG Library,platform:[switch(version(),*penn*,0,*tinymux*,1,You must have rhostmush or another type of MU distribution. Please set the platform attribute of the CG Library to 0 if your system supports attrib_set or 1 if it only supports set. If it supports neither then you cannot use this system.)])]

th End Library Object

th Library Controller

@create Library Controller
th [set(Library Controller,va:[num(CG Library)])]
th [set(Library Controller,vb:[num(CG Description DB)])]

&CMD.NEW.STAT.TYPE #4079=$+stat/addtype *:@assert [isstaff(%#)]={@pemit %#=[ansi(hr,DENIED:)]%bStaff Only};@assert [t(%0)]={@pemit %#=[ansi(hr,ALERT:)]%bYou didn't specify the name of the type.};[set(%va,LIST_STATS:[setunion(xget(%va,LIST_STATS),edit(%0,%b,-))])];@pemit %#=[ansi(hw,NOTICE:)]%bAdded a new stat type to the system: %0. You may now use +stat/lock %0/Stat-Type\=Value to lock it to specific combinations of stats and +stat/aspect %0/Stat\=lock/value to lock individual stats to a specific combination of things. Also, don't forget to use +stat/display *\=\[Single|Dual\] to tell me how to display the stats when asked.

&CMD.ADD.STAT #4079=$+stat/add *=*:@assert [isstaff(%#)]={pemit %#=[ansi(hr,DENIED:)]%bStaff Only};@assert [gte([words(%1,/)],1)]={@pemit %#=[ansi(hr,ALERT:)]%bYou didn't specify any details about the stat you are adding.};@assert [match(xget(%va,LIST_STATS),[edit(%0,%b,-)])]={@pemit %#=[ansi(hr,ALERT:)]%bThat's not a valid stat type.};[set(%va,LIST_[edit(%0,%b,-)]:[setunion(xget(%va,LIST_[edit(%0,%b,-)]),%1,|,|)])];@pemit %#=[ansi(hw,NOTICE:)]%bAdded %1 to %0.

&CMD.ADD.STAT.EX #4079=$+stat/addex *=*:@assert [isstaff(%#)]={pemit %#=[ansi(hr,DENIED:)]%bStaff Only};@assert [gte([words(%1,/)],1)]={@pemit %#=[ansi(hr,ALERT:)]%bYou didn't specify any details about the stat you are adding.};@assert [match(xget(%va,LIST_STATS),[edit(%0,%b,-)])]={@pemit %#=[ansi(hr,ALERT:)]%bThat's not a valid stat type.};@switch [words(%1,/)]=1,[set(%va,LIST_[edit(%0,%b,-)]:[setunion([if(t(setr(x,xget(%va,LIST_[edit(%0,%b,-)]))),%qX,)],%1/0,|,|)])][pemit(%#,[ansi(hw,NOTICE:)]%bAdded %1 to %0. It can be set to any level.)],2,[set(%va,LIST_[edit(%0,%b,-)]:[setunion(xget(%va,LIST_[edit(%0,%b,-)]),[before(%1,/)]/[after(%1,/)],|,|)])][pemit(%#,[ansi(hw,NOTICE:)]%bAdded [before(%1,/)] to %0. It can be set to the following levels: [after(%1,/)].)]

&CMD.REM.STAT #4079=$+stat/rem *=*:@assert [isstaff(%#)]={pemit %#=[ansi(hr,DENIED:)]%bStaff Only};@assert [hasattr(%va,LIST_[edit(%0,%b,-)])]={@pemit %#=[ansi(hr,ALERT:)]%bThat's not a valid stat type or there are no stats defined for the type.};@set %va=LIST_[edit(%0,%b,-)]:[u(FN.REMOVE_ENTRY,[xget(%va,LIST_[edit(%0,%b,-)])],%1)];@pemit %#=[ansi(hw,NOTICE:)]%b%1 removed from %0

&CMD.ADD.DESC #4079=$+stat/desc */*=*:@assert [isstaff(%#)]={pemit %#=[ansi(hr,DENIED:)]%bStaff Only};@assert [match(xget(%va,LIST_STATS),[edit(%0,%b,-)])]={@pemit %#=[ansi(hr,ALERT:)]%bThat's not a valid stat type.};@assert [match(xget(%va,LIST_[edit(%0,%b,-)]),*%1*,|)]={@pemit %#=[ansi(hr,ALERT:)]%bCouldn't find that stat in the given type.};[set(%vb,[edit(%0,%b,-)]-[edit(%1,%b,-)]:%2)];@pemit %#=[ansi(hw,NOTICE:)]%bAdded description to %1


&CMD.STAT.VIEW #4079=$+stat/view */*:@assert [match(xget(%va,LIST_STATS),[edit(%0,%b,-)])]={@pemit %#=[ansi(hr,ALERT:)]%bThat's not a valid stat type.};@assert [hasattr(%vb,[edit(%0,%b,-)]-[edit(%1,%b,-)])]={@pemit %#=[ansi(hr,ALERT:)]%b%1 does not have a stored description. Ask a staffer to add one.};@pemit %#=[header(%1)]%R[eval(%vb,[edit(%0,%b,-)]-[edit(%1,%b,-)])]%R[footer()]

&CMD.STAT.LIST.BASE #4079=$+stat/list:@pemit %#=[header(Stat Types)]%RI have the following stat types:%R%T[itemize(xget(%va,LIST_STATS))]%R[footer()]

&CMD.STAT.LIST.SPECIFIC #4079=$+stat/list *:@assert [hasattr(%va,LIST_[edit(%0,%b,-)])]={@pemit %#=[ansi(hr,ALERT:)]%b%0 doesn't match any current stat type.};[setq(b,[switch(xget(%va,DISPLAY_[edit(%0,%b,-)]),Single,1,Dual,2,1)])];@pemit %#=[header(List of %0)]%RI have the following [ucstr(%0)]:%R%R[iter(setr(a,xget(%va,LIST_[edit(%0,%b,-)])),[ansi([if(mod(inum(0),2),hw,ny)],[switch(%qB,1,[ljust([edit(%i0,-,%b)],39)][if(not(mod(inum(0),2)),%R)],2,[ljust([edit(before(%i0,/),-,%b)],39)][rjust(Levels: [after(%i0,/)],39)]%R)])],|,[space(0)])]%R[footer()]

[switch(%qA,1,[ljust([edit(%i0,-,%b)],39)][if(not(mod(inum(0),2)),%R)],2,[ljust([edit(before(%i0,/),-,%b)],39)][rjust(Levels: after(%i0,/),39)]%R)]

&CMD.STAT.DISPLAY #4079=$+stat/display *=*:@assert [isstaff(%#)]={pemit %#=[ansi(hr,DENIED:)]%bStaff only.};@assert [match(xget(%va,LIST_STATS),[edit(%0,%b,-)])]={@pemit %#=[ansi(hr,ALERT:)]%bThat's not a valid stat type.};@assert [match(Single Dual,%1)]={@pemit %#=[ansi(hr,ALERT:)]%bDisplay type can only be Single or Dual.};[set(%va,DISPLAY_[edit(%0,%b,-)]:%1)];@pemit %#=[ansi(hw,NOTICE:)]%b%0's display type set to %1.

&CMD.STAT.MOD #4079=$+stat/mod */*=*:@assert [isstaff(%#)];@assert [pmatch(%0)]=@pemit %#=%0 didn't match a player;@assert [hasattr(%va,LIST_[edit(%1,%b,_)])]=@pemit %#=%1 didn't match a stat type;@assert [eq([words(%2,:)],2)]=@pemit %#=Command Format: +stat/mod name/type\=stat:amount;[attrib_set([pmatch(%0)]/%1`MOD`[edit(before(%2,:),%b,-)],[after(%2,:)])];@set [pmatch(%0)]/%1`MOD=wizard mortal_dark;@pemit %#=Modified [apostrophe_name(pmatch(%0))] %1 [before(%2,:)] by [after(%2,:)]. Use +stat/modclear to remove.

&CMD.MOD.CLEAR #4079=$+stat/modclear */*=*:@assert [isstaff(%#)];@assert [pmatch(%0)]=@pemit %#=%0 didn't match a player;@assert [hasattr(%va,LIST_[edit(%1,%b,_)])]=@pemit %#=%1 didn't match a stat type;[attrib_set([pmatch(%0)]/%1`MOD`[edit(%2,%b,-)])];@pemit %#=Cleared the mod on [apostrophe_name(pmatch(%0))] %1 %2.

&CMD.MOD.VITALS #4079=$+stat/modvitals */*=*:@assert [isstaff(%#)];@assert [pmatch(%0)]=@pemit %#=%0 didn't match a player;@assert [match(Vitae Vitaemax DefenseA DefenseU Speed Initiative Willpower Willpowermax,%1)]=@pemit %#=You can only mod Vitae (Current Vitae), Vitaemax (Max Vitae), DefenseA (Armed Defense), DefenseU (Unarmored Defense), Speed, Initiative, Willpower (Current) or Willpowermax (Max willpower) with this command.;[attrib_set([pmatch(%0)]/VITALS`MOD`%1,%2)];@set [pmatch(%0)]/VITALS`MOD`%1=wizard mortal_dark;@pemit %#=Modified [apostrophe_name(pmatch(%0))] %1 by %2. To clear it use +stat/cleavital.

&CMD.MOD.VITALSCLEAR #4079=$+stat/clearvital *=*:@assert [isstaff(%#)];@assert [pmatch(%0)]=@pemit %#=%0 didn't match a player;@assert [match(Vitae Vitaemax DefenseA DefenseU Speed Initiative Willpower Willpowermax,%1)]=@pemit %#=You can only mod Vitae (Current Vitae), Vitaemax (Max Vitae), DefenseA (Armed Defense), DefenseU (Unarmored Defense), Speed, Initiative, Willpower (Current) or Willpowermax (Max willpower) with this command.;[attrib_set([pmatch(%0)]/VITALS`MOD`%1)];@pemit %#=Removed the modifier for [apostrophe_name(pmatch(%0))] %1.

&FN.REMOVE_ENTRY #4079=[ldelete(%0,[match(%0,%1*,|)],|)]

&CMD.STAT.SET #4079=$+stat/set */*=*:@assert [isstaff(%#)]={@pemit %#=[ansi(hr,STAFF ONLY)]};@assert [pmatch(%0)]={@pemit %#=[ansi(hr,%0 doesn't match a player.)]};@assert [hasattr(%va,LIST_[edit(%1,%b,_)])]={@pemit %#=[ansi(hr,%1 doesn't match a stat type.)]};@assert [gte([words(%2,:)],2)]={@pemit %#=[ansi(hr,Didn't put in a stat or level)]};@switch [strmatch(%2,!*)][strmatch(%2,Specialty*)]=00,{@pemit %#=[u(F.SET.STAT,[pmatch(%0)],[edit(%1,%b,_)],%2)]},10,{@pemit %#=[u(F.REMOVE.STAT,[pmatch(%0)],[edit(%1,%b,_)],%2)]},01,{@pemit %#=[u(FN.SPEC.ADD,[pmatch(%0)],[edit(%1,%b,_)],%2)]},11,{@pemit %#=[u(FN.SPEC.REM,[pmatch(%0)],[edit(%1,%b,_)],%2)]};@cemit/noisy debug=[name(%#)] [if(strmatch(%2,!*),removing [after(%2,!)] from [apostrophe_name(pmatch(%0))] sheet.,adding %2 to [apostrophe_name(pmatch(%0))] sheet.)];[u(#1773/FN`WIZSET.INSERT_AUDIT,[pmatch(%0)],%#,%2)]

@@ Passed - Player Name = Laurels/[Harpy]:[cost]
&CMD.STAT.LAURELS #4079=$+stat/laurels *=*:@assert [setq(a,before(%1,/))][setq(b,before(after(%1,/),:))][setq(c,after(%1,:))][if(%qb,setq(h,1),setq(h,0))][isstaff(%#)]={@pemit %#=[ansi(hr,STAFF ONLY)]};@assert [pmatch(%0)]={@pemit %#=[ansi(hr,%0 doesn't match a player.)]};@assert [if(%qb,pmatch(%qb),1)]={@pemit %#=[ansi(hr,%qc doesn't match a player.)]};@assert [setq(L,add(mul(get_merit(pmatch(%0),STATUS CITY),5),get_merit(pmatch(%0),Laurels)))][setq(L,add(%qL,%qa))][if(%qh,gt(default(pmatch(%qb)/Laurels,0),if(%qc,%qc,abs(%qa))),1)]={@pemit %#=%qb doesn't have [if(%qc,%qc,%qa)] laurels, only [default(pmatch(%qb)/Laurels,0)]};@assert [gte(%qL,5)]={@pemit %#=You can't lower a character below Status 1 with laurels.%qa %qb %qc};@assert [lte(%qL,25)]={@pemit %#=You can't raise a character above Status 5.};[u(F.SET.STAT,pmatch(%0),Merit,Status:[div(%qL,5)]/City)][u(F.SET.STAT,pmatch(%0),Merit,Laurels:[mod(%qL,5)])][cemit(debug,[name(%#)][if(strmatch(%1,-*),%bremoving [after(%1,-)] laurels from [apostrophe_name(pmatch(%0))]sheet.,%badding %1 laurels to [apostrophe_name(pmatch(%0))]%bsheet.)],noisy)][u(#1773/FN`WIZSET.INSERT_AUDIT,[pmatch(%0)],%#,%1 laurels)][if(%qh,attrib_set2(%qb/laurels,sub(get(%qb/laurels,if(%qc,%qc,abs(%qa))))))]

@@ Passed - Player Name = Laurels/[Cost]
&CMD.HARPY.LAURELS #4079=$+laurels *=*:@assert [setq(a,before(%1,/))][setq(c,after(%1,/))][pmatch(%0)]={@pemit %#=[ansi(hr,%0 doesn't match a player.)]};@assert [setq(L,add(mul(get_merit(pmatch(%0),STATUS CITY),5),get_merit(pmatch(%0),Laurels)))][setq(L,add(%qL,%qa))][gt(default(pmatch(%#)/Laurels,0),if(%qc,%qc,abs(%qa)))]={@pemit %#=You don't have [if(%qc,%qc,%qa)] laurels, only [default(pmatch(%#)/Laurels,0)]};@assert [gte(%qL,5)]={@pemit %#=You can't lower a character below Status 1 with laurels.%qa %# %qc};@assert [lte(%qL,25)]={@pemit %#=You can't raise a character above Status 5.};[u(F.SET.STAT,pmatch(%0),Merit,Status:[div(%qL,5)]/City)][u(F.SET.STAT,pmatch(%0),Merit,Laurels:[mod(%qL,5)])][cemit(debug,[name(%#)][if(strmatch(%1,-*),%bremoving [after(%1,-)] laurels from [apostrophe_name(pmatch(%0))]sheet.,%badding %1 laurels to [apostrophe_name(pmatch(%0))]%bsheet.)],noisy)][u(#1773/FN`WIZSET.INSERT_AUDIT,[pmatch(%0)],%#,%1 laurels)][attrib_set2(%#/laurels,sub(get(%#/laurels,if(%qc,%qc,abs(%qa)))))][pemit(%#,[name(%#)][if(strmatch(%1,-*),%bremoving [after(%1,-)] laurels from [apostrophe_name(pmatch(%0))]sheet.,%badding %1 laurels to [apostrophe_name(pmatch(%0))]%bsheet.)])]

@@ Passed - Player DBRef, Type, Merit:Level/Notes
&F.SET.STAT #4079=[setq(a,[before(%2,:)])][switch(words(after(%2,:),/),1,[if(setr(z,match(xget(%0,%1),%qA*,|)),[set(%0,%1:[edit(xget(%0,%1),extract(xget(%0,%1),%qZ,1,|),%qA~[after(%2,:)]~)])],[set(%0,%1:[setunion(xget(%0,%1),%qA~[after(%2,:)]~,|,|)])])],2,[if(setr(z,match(xget(%0,%1),%qA~*~[after(after(%2,:),/)],|)),[set(%0,%1:[edit(xget(%0,%1),extract(xget(%0,%1),%qZ,1,|),%qA~[before(after(%2,:),/)]~[after(after(%2,:),/)])])],[set(%0,%1:[setunion(xget(%0,%1),%qA~[before(after(%2,:),/)]~[after(after(%2,:),/)],|,|)])])])][set(%0/%1,Wizard)][set(%0/%1,Mortal_dark)][ansi(hw,Stats:)]%bAdded %qA to [name(%0)] as [edit(%2,_,%b)]

@@ Passed - Player DBRef, Type, Merit:Level/Notes
&F.REMOVE.STAT #4079=[setq(a,[edit([before(%2,:)],!,)])][setq(b,xget(%0,%1))][switch(words(%qB,|),0,[ansi(hw,Stats:)]%bNo [edit(%2,_,%b)]on player,[set(%0,%1:[setdiff(xget(%0,%1),%qA~[before(after(%2,:),/)]~[after(after(%2,:),/)],|,i,|)])][ansi(hw,Stats:)]%bRemoved [before(%2,:)][if(t(setr(test,[after(%2,/)])),%b%q<test>)]from [name(%0)])]

@@replace(<list>, <position(s)>, <new item>[, <delimiter>[, <osep>]])
&FN.SPEC.ADD #4079=[setq(A,[before([after(%2,:)],.)])][setq(b,[after([after(%2,:)],.)])][if(match(xget(%va,LIST_%1),%qA,|),[if(t(setr(pos,match(xget(%0,%1.SPECS),%qA*,|))),[set(%0,%1.SPECS:[replace(xget(%0,%1.SPECS),%q<pos>,[extract(xget(%0,%1.SPECS),%q<pos>,1,|)]:%qB,|)])],[set(%0,%1.SPECS:[setunion(xget(%0,%1.SPECS),%qA~%qB,|,|)])])][ansi(hw,STAT:)]%bAdded %qB as a specialty of %qA,[ansi(hr,STAT:)]%b%qA doesn't match a skill.)][set(%0/%1.SPECS,Wizard Mortal_Dark)]

&FN.SPEC.REM #4079=[setq(A,[before([after(%2,:)],.)])][setq(b,[after([after(%2,:)],.)])][set(%0,%1.SPECS:[setdiff(lcstr(xget(%0,%1.SPECS)),lcstr(%qA~%qB),|,|)])][ansi(hr,STAT:)]%bRemoved %qB Specialty from [name(%0)] for skill %qA.

@@ Passed - Player DBREF, Type, What
&FN.GET.STAT #4079=[switch([hasattrval(%0,%1)][t([setr(num,[match(xget(%0,%1),%2*,|)])])],0*,[setq(result,0)],10,[setq(result,0)],11,[setq(result,[extract([extract(xget(%0,%1),%q<num>,1,|)],2,1,~)])])][if(hasattrval(%0,%1`MOD`[edit(%2,%b,-)]),[setq(result,[add(%q<result>,[xget(%0,%1`MOD`[edit(%2,%b,-)])])])])]%q<result>

@@ passed - Player DBREF, Type, What, Note
&FN.GET.STAT.EX #4079=[switch([hasattrval(%0,%1)][t([setr(num,[match(xget(%0,%1),%2~*~%3,|)])])],0*,0,10,0,11,[extract([extract(xget(%0,%1),%q<num>,1,|)],2,1,~)])]

th End Library Controller


